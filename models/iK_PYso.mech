% # iK_PYso: Fast delayed rectifier potassium current, for generic
%     pyramidal soma compartments used in the DynaSim implementation of
%     (Krishnan et al., 2016). Note that in the original code, this
%     compartment/cell type is called CX or CX_SOMA, and this current is called
%     IKv_CX.
%
% - Source: This was built from the original paper's code, using "currents.h"
%     lines 480-496, 1235 and "currents.cpp" lines 260-272, 1076.
%
% - References:
%     - Krishnan GP, Chauvette S, Shamie I, Soltani S, Timofeev I, Cash SS, et
%         al. Cellular and neurochemical basis of sleep stages in the
%         thalamocortical network. eLife. 2016;5: e18607
%
% - Tags: potassium, current, intrinsic, pyramidal, soma
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Parameters
gK = 200   % mS/cm^2
EK = -90    % mV

% In the original code, this sleep stage experimental factor is represented by
%     `fac_gkv_cx`
fac_K_PYso = 1

% Not sure what these parameters actually represent
tha = 25   % mV, but unknown meaning
qa = 9     % ???, unknown meaning
% The Q10 temperature adjustment values never change over the course of the
%     simulations, so we are setting them to be constant.
phiN = 2.3^((36-23)/10)   % unitless Q10 value of temperature adjustment

% Note that because this current is SO ridiculously strong, you MUST set the
%     initial conditions to be as "boring" as possible.
nKIC = 0.0
nKNoiseIC = 0.0

% Functions
alphaN(X) = 0.02 .*(X - tha)./(1 - exp(-(X - tha)./qa))
betaN(X) = -0.002.*(X - tha)./(1 - exp( (X - tha)./qa))
tauN(X) = (1./(alphaN(X) + betaN(X)))./phiN
Ninf(X) = alphaN(X)./(alphaN(X) + betaN(X))

% Instead of the PYso axo-somatic compartment calculating the dv/dt the normal
%     way, they solve for just v using the "steady-state" values of the system.
%     This means that we have to calculate different parts of the current/etc.
%     differently. For the clearest explanation, see variable `eqns_soma` in
%     the runscript.
% Note that the below doesn't contain the voltage of the soma. This is
%     analogous to the corresponding part of `g2_SOMA` in the original code:
curr_K_PYso(X,nK) = phiN.*fac_K_PYso.*gK.*nK.*EK
% Note that the below doesn't contain any voltages. This is
%     analogous to the corresponding part of `g1_SOMA` in the original code:
cond_K_PYso(X,nK) = phiN.*fac_K_PYso.*gK.*nK

monitor curr_K_PYso
monitor cond_K_PYso

% ODEs and ICs
nK' = (Ninf(X)-nK)./tauN(X)
nK(0)=nKIC+nKNoiseIC.*rand(1,Npop)

% Interface
@current += curr_K_PYso(X,nK)
@conductance += cond_K_PYso(X,nK)
